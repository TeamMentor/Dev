
@using FluentSharp.CoreLib
@using FluentSharp.Git
@using TeamMentor.CoreLib
@using Sharpen
@using NGit.Treewalk.Filter
@using NGit.Treewalk
@using NGit.Revwalk
@using NGit.Diff
@using NGit

@{

    var userData = TM_UserData.Current;
    var userDataLocation = userData.Path_UserData;


    var file = System.Web.HttpContext.Current.Request["file"];

    if (file.notValid())
    {
        return; // end request
    }


    Func<Repository, string, string, string, string> getDiff =
        (gitRepo, path, fromCommitId, toCommitId) =>
            {

                var fromCommit = gitRepo.Resolve(fromCommitId);
                var toCommit = gitRepo.Resolve(toCommitId);

                var outputStream = "Sharpen.dll".assembly().type("ByteArrayOutputStream").ctor(new object[0]).cast<OutputStream>();
                //return "diffing from {0} to  {1}".format(fromCommit, toCommit);
                var diffFormater = new DiffFormatter(outputStream);
                var pathFilter = PathFilter.Create(path);
                diffFormater.SetRepository(gitRepo);
                diffFormater.SetPathFilter(pathFilter);
                //diffFormater.Format(refLog.GetNewId(), refLog.GetOldId());
                diffFormater.Format(fromCommit, toCommit);
                return "result: " + outputStream.str();
            };

    Func<Repository, RevCommit, string, string> getFistValue =
        (gitRepo, commit, path) =>
            {
                var outputStream = "Sharpen.dll".assembly().type("ByteArrayOutputStream").ctor(new object[0]).cast<OutputStream>();
                var diffFormater = new DiffFormatter(outputStream);                
                var pathFilter = PathFilter.Create(path);
                diffFormater.SetRepository(gitRepo);
                diffFormater.SetPathFilter(pathFilter);
                
                var revWalk = new RevWalk(gitRepo);
                var canonicalTreeParser = new CanonicalTreeParser(null, revWalk.GetObjectReader(), commit.Tree);
                diffFormater.Format(new EmptyTreeIterator(), canonicalTreeParser);
                return outputStream.str().fix_CRLF();                
            };
        
        
        
       
    var nGit = userDataLocation.git_Open();
    var repo = nGit.Repository;


    var log = nGit.Git.Log();
    log.AddPath(file);
    //var revCommit = log.Call().first();
    var max = 10;
}    


<h4>Git Diff (File)</h4>

Showing first @max entries<br/><br/>

@foreach (var revCommit in log.Call().take(max))
{ 
    var when = revCommit.GetAuthorIdent().GetWhen();
    var message = revCommit.GetFullMessage();
    var toId = revCommit.Name;

    var rawDiff = "";
    
    if (revCommit.ParentCount == 0)
    {
        rawDiff = getFistValue(repo, revCommit, file);
    }
    else
    {
        var fromId = revCommit.Parents.first().Name;
        rawDiff = getDiff(repo, file, fromId, toId);

    }   
    var diffLines = rawDiff.fix_CRLF().lines();    
    
    var diffLines_withData = diffLines.where((line) => line.starts("+") && !line.starts("++")|| line.starts("-") && !line.starts("--"));


    <b>@when:</b> <small><small>@message</small></small>
    <p>
      <ul>
        <small>
            @foreach (var line in diffLines_withData)
            {        
                var color = "black";
                if (line.starts("+") )
                {   color = "green"; }
                else if (line.starts("-") )
                {   color = "red"; }        
                <span style='color:@color'>@line</span><br/>
            }  
        </small>
      </ul>
    </p>
}
<p>
    <a href="GitStatus"> go back to gitStatus</a>
</p>
    
